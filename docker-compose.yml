services:
  express:
    build:
      context: ./
    volumes:
      - ./src:/app/src
      - /mnt/video-volume/lost+found:/app/src/media
    env_file:
      - .env

  redis:
    image: redis
    ports:
      - 6379:6379    
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    
  nginx:
    image: jonasal/nginx-certbot
    environment:
      - CERTBOT_EMAIL=jiechenmc@gmail.com
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /mnt/video-volume/lost+found:/usr/share/nginx/html/media
      - ./nginx/user.conf:/etc/nginx/user_conf.d/user.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - nginx_secrets:/etc/letsencrypt
    depends_on:
      - express

  db:
    image: mongo
    environment:
      GLIBC_TUNABLES: glibc.pthread.rseq=0
    volumes:
      - ./mongodb/rs.conf:/etc/mongod.conf
    ports:
      - 27017:27017
      
  # db:
  #   image: mongo
  #   environment:
  #     GLIBC_TUNABLES: glibc.pthread.rseq=0
  #   command: ["mongod", "--config", "/etc/mongod.conf"]
  #   healthcheck:
  #     test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'130.245.136.74:27017',priority:1},{_id:1,host:'130.245.136.74:27018',priority:0.5},{_id:2,host:'130.245.136.74:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
  #     interval: 5s
  #     timeout: 30s
  #     start_period: 0s
  #     start_interval: 1s
  #     retries: 30
  #   volumes:
  #     - ./mongodb/rs.conf:/etc/mongod.conf
  #   ports:
  #     - 27017:27017
  
  # db2:
  #   image: mongo
  #   environment:
  #     GLIBC_TUNABLES: glibc.pthread.rseq=0
  #   command: ["mongod", "--config", "/etc/mongod.conf"]
  #   volumes:
  #     - ./mongodb/rs.conf:/etc/mongod.conf
  #   ports:
  #     - 27018:27017

  # db3:
  #   image: mongo
  #   environment:
  #     GLIBC_TUNABLES: glibc.pthread.rseq=0
  #   command: ["mongod", "--config", "/etc/mongod.conf"]
  #   volumes:
  #     - ./mongodb/rs.conf:/etc/mongod.conf
  #   ports:
  #     - 27019:27017

  uploader:
    build:
      context: ./uploader
    env_file:
      - .env
    volumes:
      - /mnt/video-volume/lost+found:/app/tmp

  haproxy:
    image: haproxy:latest
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - 8405:8405

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.47.0
  #   container_name: cadvisor
  #   restart: unless-stopped
  #   privileged: true
  #   # ports:
  #   #   - "8080:8080"
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   devices:
  #     - /dev/kmsg

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:latest
  #   container_name: node_exporter
  #   command:
  #     - '--path.rootfs=/host'
  #   pid: host
  #   restart: unless-stopped
  #   volumes:
  #     - '/:/host:ro,rslave'
  #   ports:
  #     - 9100:9100

  # mdb_exporter:
  #   image: percona/mongodb_exporter:0.42.0
  #   restart: unless-stopped
  #   command:
  #     - '--mongodb.uri=mongodb://root:example@db:27017'  # Adjust the URI with correct credentials
  #     - '--collect-all'
  #   # ports:
  #   #   - 9216:9216  # Map Prometheus exporter port

  # nginx_exporter:
  #   ports:
  #       - 9113:9113
  #   image: nginx/nginx-prometheus-exporter:1.3.0
  #   command: --nginx.scrape-uri=http://nginx:8080/stub_status

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   restart: unless-stopped
  #   volumes:
  #     - grafana_storage:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   ports:
  #     - 3001:3000

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   restart: unless-stopped
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - 9090:9090

volumes:
  nginx_secrets:
  # prometheus_data:
  # grafana_storage: