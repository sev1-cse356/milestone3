<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <title>Media Player</title>
  <script src="https://cdn.dashjs.org/latest/dash.all.min.js"></script>
  <style>
    #video-list {
      display: flex;
      flex-wrap: wrap;
      justify-content: flex-start;
      gap: 20px;
      margin-top: 20px;
      padding: 0 10px;
    }

    .video-item {
      cursor: pointer;
      flex: 1 1 calc(33.33% - 20px);
      min-width: 300px;
      max-width: 350px;
      margin: 10px;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 15px;
      display: flex;
      flex-direction: column;
      align-items: center;
      box-sizing: border-box;
      text-align: center;
      transition: background-color 0.3s;
    }

    .video-item h3 {
      font-size: 1.2rem;
      margin: 5px 0;
      padding-bottom: 10px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .video-item p {
      font-size: 1rem;
      margin: 5px 0;
      padding-top: 10px;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: normal;
    }

    .video-item:hover {
      background-color: #ededed;
    }

    .thumbnail {
      width: 90%;
      height: auto;
      margin: 10px 0;
    }
  </style>
  <script>
    let currentVideoIndex = 0; // Track the currently visible video
    let debounceTimeout; // Timeout for debouncing scroll events
    const videos = []; // To hold references to video elements

    document.addEventListener('DOMContentLoaded', () => {
      const videoList = document.getElementById('video-list');
      
      if (videoList) {
        fetchVideos(videoList); // Fetch the first page of videos
      } else {
        console.error('Video list element not found!');
      }

      // Attach event listener to the login form
      form = document.getElementById('loginForm')
      if (form) {
        form.addEventListener('submit', (e) => {
          e.preventDefault();
          const fd = new FormData(e.target);
          const username = fd.get('username');
          const password = fd.get('password');

          login(username, password);
        });
      }
    });

    // Fetch videos from the server and append them to the video list
    async function fetchVideos(videoList) {
      const count = 10;
      try {
        const response = await fetch(`/api/videos/homepage/${count}`);
        const data = await response.json();

        console.log(data)

        if (data.status === 'OK') {
          data.randomVideos.forEach((video) => {
            const videoItem = document.createElement('div');
            videoItem.classList.add('video-item');
            videoItem.setAttribute('data-id', video.title);

            videoItem.onclick = () => {
              window.location.href = `/play/${video.title}`;
            };

            videoItem.innerHTML = `
              <h3>${video.title}</h3>
              <img class="thumbnail" src="/api/thumbnail/${video.title}" alt="${video.title}">
              <p>${video.description}</p>
            `;

            videoList.appendChild(videoItem);
          });
        } else {
          console.log(data.message); // No more videos to load
        }
      } catch (error) {
        console.error('Error fetching videos:', error);
      }
    }

    // Add a default user for testing purposes
    function addDefaultUser() {
      fetch('/api/adduser', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          username: 'admin',
          password: 'abc123',
          email: 'admin@356.com',
        }),
      }).then(() => {
        fetch('/api/verify?email=admin@356.com&key=somerandomstring');
      });
    }

    // Login function
    function login(username, password) {
      fetch('/api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username: username || 'admin', password: password || 'abc123' }),
      }).then(() => {
        window.location.reload();
      });
    }

    // Logout function
    function logout() {
      fetch('/api/logout', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
      }).then(() => {
        window.location.reload();
      });
    }
  </script>
</head>

<body>
  {{#if @username}}
  <div>
    <div>You are logged in as {{@username}}.</div>
    <button onclick="logout()">Logout</button>
    <div id="video-list"></div> <!-- Video list container -->
  </div>
  {{else}}
  <div>
    <button onclick="addDefaultUser()">Add Default User</button>
    <pre>The default credentials: { "username": "admin", "password": "abc123", "email": "admin@356.com" }</pre>
    <button onclick="login()">Login As Default User</button>
  </div>
  <form id="loginForm">
    <label>Username</label>
    <input name="username" />
    <label>Password</label>
    <input name="password" />
    <button type="submit">Login</button>
  </form>
  {{/if}}
</body>

</html>
